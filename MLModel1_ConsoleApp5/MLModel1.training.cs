// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Transforms.Image;
using System.Linq;

namespace MLModel1_ConsoleApp5
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.LoadImages(outputColumnName: @"input", imageFolder: @"", inputColumnName: @"ImageSource")
                                    .Append(mlContext.Transforms.ResizeImages(imageWidth: 800, imageHeight: 600, outputColumnName: @"input", inputColumnName: @"input", cropAnchor: ImageResizingEstimator.Anchor.Center, resizing: ImageResizingEstimator.ResizingKind.Fill))
                                    .Append(mlContext.Transforms.ExtractPixels(outputColumnName: @"input", inputColumnName: @"input", colorsToExtract: ImagePixelExtractingEstimator.ColorBits.Rgb, orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ARGB))
                                    .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: @"C:\Users\Admin\source\repos\RtspClientSharpCore\MLModel1_ConsoleApp4\MLModel1.onnx"));

            return pipeline;
        }
    }
}
